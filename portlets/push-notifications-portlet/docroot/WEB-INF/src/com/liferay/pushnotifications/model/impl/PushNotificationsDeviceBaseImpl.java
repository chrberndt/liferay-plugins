/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.pushnotifications.model.impl;

<<<<<<< HEAD
import com.liferay.portal.kernel.exception.SystemException;
=======
import aQute.bnd.annotation.ProviderType;
>>>>>>> e7cdf43148702e1699eea503c162f42b84cbcee1

import com.liferay.pushnotifications.model.PushNotificationsDevice;
import com.liferay.pushnotifications.service.PushNotificationsDeviceLocalServiceUtil;

/**
 * The extended model base implementation for the PushNotificationsDevice service. Represents a row in the &quot;PushNotificationsDevice&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This class exists only as a container for the default extended model level methods generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PushNotificationsDeviceImpl}.
 * </p>
 *
<<<<<<< HEAD
 * @author Silvio Santos
 * @see PushNotificationsDeviceImpl
 * @see com.liferay.pushnotifications.model.PushNotificationsDevice
 * @generated
 */
=======
 * @author Bruno Farache
 * @see PushNotificationsDeviceImpl
 * @see PushNotificationsDevice
 * @generated
 */
@ProviderType
>>>>>>> e7cdf43148702e1699eea503c162f42b84cbcee1
public abstract class PushNotificationsDeviceBaseImpl
	extends PushNotificationsDeviceModelImpl implements PushNotificationsDevice {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a push notifications device model instance should use the {@link PushNotificationsDevice} interface instead.
	 */
	@Override
<<<<<<< HEAD
	public void persist() throws SystemException {
=======
	public void persist() {
>>>>>>> e7cdf43148702e1699eea503c162f42b84cbcee1
		if (this.isNew()) {
			PushNotificationsDeviceLocalServiceUtil.addPushNotificationsDevice(this);
		}
		else {
			PushNotificationsDeviceLocalServiceUtil.updatePushNotificationsDevice(this);
		}
	}
}